#!/bin/bash

# Script para testar os novos endpoints de gamifica√ß√£o
# Sprint 1 - Sistema de A√ß√µes Manuais

API_URL="http://localhost:3000"
TOKEN="" # Adicionar token JWT aqui

echo "üß™ Testando Sistema de A√ß√µes Manuais - Sprint 1"
echo "================================================="

# Fun√ß√£o para fazer requisi√ß√µes
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3
    
    echo "üì° $method $endpoint"
    
    if [ -n "$data" ]; then
        curl -X $method \
             -H "Content-Type: application/json" \
             -H "Authorization: Bearer $TOKEN" \
             -d "$data" \
             "$API_URL$endpoint" \
             -w "\nüîç Status: %{http_code}\n" \
             -s | jq '.' 2>/dev/null || echo "Resposta n√£o √© JSON v√°lido"
    else
        curl -X $method \
             -H "Authorization: Bearer $TOKEN" \
             "$API_URL$endpoint" \
             -w "\nüîç Status: %{http_code}\n" \
             -s | jq '.' 2>/dev/null || echo "Resposta n√£o √© JSON v√°lido"
    fi
    
    echo "---"
}

# Teste 1: Verificar tipos de a√ß√£o dispon√≠veis
echo "üéØ 1. Verificando tipos de a√ß√£o dispon√≠veis"
make_request "GET" "/gamification/actions/types"

# Teste 2: Verificar cooldowns atuais
echo "üïí 2. Verificando cooldowns do usu√°rio"
make_request "GET" "/gamification/actions/my-cooldowns"

# Teste 3: Verificar caps semanais
echo "üìä 3. Verificando caps semanais"
make_request "GET" "/gamification/actions/my-weekly-caps"

# Teste 4: Submeter feedback significativo
echo "üí¨ 4. Submetendo feedback significativo"
make_request "POST" "/gamification/actions/meaningful-feedback" '{
  "recipient": "Jo√£o Silva",
  "feedbackType": "T√©cnico",
  "description": "Feedback sobre implementa√ß√£o de API REST",
  "evidence": "Screenshot da conversa no Slack"
}'

# Teste 5: Submeter sess√£o de mentoria
echo "üë®‚Äçüè´ 5. Submetendo sess√£o de mentoria"
make_request "POST" "/gamification/actions/mentoring-session" '{
  "mentee": "Maria Santos",
  "duration": 60,
  "topics": ["Arquitetura de Software", "Boas Pr√°ticas"],
  "description": "Sess√£o focada em padr√µes de design",
  "evidence": "Ata da reuni√£o"
}'

# Teste 6: Submeter compartilhamento de conhecimento
echo "üß† 6. Submetendo compartilhamento de conhecimento"
make_request "POST" "/gamification/actions/knowledge-sharing" '{
  "topic": "React Hooks Avan√ßados",
  "audience": "Time Frontend",
  "format": "Workshop",
  "duration": 90,
  "description": "Workshop sobre hooks customizados",
  "evidence": "Link da apresenta√ß√£o no Confluence"
}'

# Teste 7: Submeter melhoria de processo
echo "‚öôÔ∏è 7. Submetendo melhoria de processo"
make_request "POST" "/gamification/actions/process-improvement" '{
  "process": "Deploy",
  "problem": "Deploy manual demorado",
  "solution": "Implementa√ß√£o de CI/CD",
  "impact": "Reduziu tempo de deploy de 2h para 10min",
  "description": "Automa√ß√£o completa do pipeline",
  "evidence": "Documenta√ß√£o do pipeline no GitLab"
}'

# Teste 8: Tentar submeter novamente (testar cooldown)
echo "üö´ 8. Testando cooldown - tentando submeter feedback novamente"
make_request "POST" "/gamification/actions/meaningful-feedback" '{
  "recipient": "Ana Costa",
  "feedbackType": "Comportamental",
  "description": "Feedback sobre comunica√ß√£o"
}'

# Teste 9: Verificar submiss√µes do usu√°rio
echo "üìã 9. Verificando minhas submiss√µes"
make_request "GET" "/gamification/actions/my-submissions?limit=10"

# Teste 10: Verificar fila de valida√ß√£o
echo "‚úÖ 10. Verificando fila de valida√ß√£o"
make_request "GET" "/gamification/actions/validate-queue?limit=5"

echo ""
echo "üéâ Testes conclu√≠dos!"
echo ""
echo "üìù Para usar este script:"
echo "1. Inicie o backend: npm run start:dev"
echo "2. Fa√ßa login para obter um token JWT"
echo "3. Edite este script adicionando o token na vari√°vel TOKEN"
echo "4. Execute: chmod +x test-gamification-api.sh && ./test-gamification-api.sh"
echo ""
echo "üîß Depend√™ncias necess√°rias:"
echo "- curl (requisi√ß√µes HTTP)"
echo "- jq (formata√ß√£o JSON)"
echo ""
echo "üí° Endpoints implementados:"
echo "- POST /gamification/actions/meaningful-feedback"
echo "- POST /gamification/actions/mentoring-session" 
echo "- POST /gamification/actions/peer-development-support"
echo "- POST /gamification/actions/knowledge-sharing"
echo "- POST /gamification/actions/cross-team-collaboration"
echo "- POST /gamification/actions/career-coaching"
echo "- POST /gamification/actions/team-goal-contribution"
echo "- POST /gamification/actions/process-improvement"
echo "- POST /gamification/actions/retrospective-facilitation"
echo "- POST /gamification/actions/conflict-resolution"
echo "- POST /gamification/actions/team-culture-building"
echo "- POST /gamification/actions/documentation-contribution"
echo "- GET  /gamification/actions/types"
echo "- GET  /gamification/actions/my-cooldowns"
echo "- GET  /gamification/actions/my-weekly-caps"
echo "- GET  /gamification/actions/my-submissions"
echo "- GET  /gamification/actions/validate-queue"
echo "- POST /gamification/actions/validate/:submissionId"
echo "üèÜ Testing GET /gamification/leaderboard"
curl -s "$BASE_URL/gamification/leaderboard" \
  -H "Content-Type: application/json" \
  | jq '.' || echo "‚ùå Leaderboard endpoint failed"

echo -e "\n"

# Test 3: Add XP manually
echo "‚ö° Testing POST /gamification/xp/manual"
curl -s "$BASE_URL/gamification/xp/manual" \
  -X POST \
  -H "Content-Type: application/json" \
  -d '{"action": "daily_activity", "points": 10}' \
  | jq '.' || echo "‚ùå Add XP endpoint failed"

echo -e "\n"

# Test 4: Get updated profile after XP gain
echo "üìà Testing updated profile after XP gain"
curl -s "$BASE_URL/gamification/profile" \
  -H "Content-Type: application/json" \
  | jq '.' || echo "‚ùå Updated profile failed"

echo -e "\n‚úÖ Gamification API tests completed!"